@model SteamProject.ViewModels.UserDashboardVM
@{
    ViewData["Title"] = "Dashboard";
    int recentCount = 0;
    int followedCount = 0;
}

<head>
    <link rel="stylesheet" href="~/css/Dashboard.css" type="text/css">
</head>

@if (Model == null)
{
    <h1>This will be your dashboard page once you sign in with a  <a href="/Identity/Account/Manage/ExternalLogins" class="btn btn-outline-info justify-content-center">linked account,</a> and we will pull your Steam library.</h1>
}
else
{



    <div class="container">

    <h1>User Dashboard <i id="steamIcon" fill="CurrentColor" class="bi bi-steam"></i>
        <button type="button" id="toDoButton" class="btn btn-outline-info center" data-bs-toggle="collapse" data-bs-target="#toDoCollapse" title="Coming Soon">
            <i fill="CurrentColor" class="bi bi-arrow-bar-down active"></i>
        </button> </h1>

        

        <div class="container">
            <div class="row">
                <div class="col-md-3 center">
                    <h3 class="center">Level @Model._user.PlayerLevel</h3>
                    <div id="userAvatar">
                        <img class="user-avatar" id="@Model._user.SteamId" src="@Model._user.AvatarUrl" style="padding-top: 10px"/>
                        <button class="btn show-followed-btn" data-toggle="modal" title="Show Followed Games" data-target="#followModal">
                            <i fill="CurrentColor" class="bi bi-bookmark"></i> Followed Games
                        </button>
                    </div>
                    <h3 class="center">@Model._user.SteamName</h3>

                </div>
                <div class="col-md-9">
                    <div id="toDoCollapse" class="collapse">
                        <p>Here is a centralized location to receive updates and news for the games you are interested in. In the future it will host the following features: </p>
                        <ul>
                            <li>Game News Tracking</li><ul>
                                <li>See the games you follow</li>
                                <li>Review the games you recently played</li>
                            </ul>
                            <li>ChatGPT based Summation of recent game updates</li>
                            <li>Change-log's' in natural human language distilled to only key details </li>
                            <li>See the results of your recent achievement competitions</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div id="followModal" class="modal fade" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header" id="followModalHeader">
                        <h3>Followed Games</h3><button type="button" class="btn-close" id="modalCloser" data-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="container-fluid" id="informationRow">
                            @{
                                if(Model.FollowedGames.Count() == 0)
                                {
                                    <p>
                                        You have no followed games!<br>
                                        Go back to your library page and follow some.
                                    </p>
                                }
                                else
                                {
                                    <div class="flex-container">
                                        @foreach (List<Game> gameList in Model.FollowedGames)
                                        {
                                            
                                                @foreach (Game game in gameList)
                                                {
                                                    var index = game.Name.IndexOf("'");
                                                    //Can make this more simple by just assigning name = game.Name and then doing substring on it if there's an index,
                                                    // and then use that name variable no matter what so that the if-else doesn't have repeated code.
                                                    // Scot recommended to put this in a service, and then call it so I can catch all ' and " or other symbols.
                                                    if(index > -1)
                                                    {
                                                        var name = game.Name.Substring(0, index) + "\\" + game.Name.Substring(index);
                                                        <div class="card followCard col-md-4 mb-3" id="@game.Name" value="@game.AppId">
                                                            <img class="img-fluid" alt="@game.Name" src="@string.Format("https://steamcdn-a.akamaihd.net/steam/apps/{0}/capsule_616x353.jpg", game.AppId)" alt="@string.Format("{0}", game.Name)">
                                                            <button type="button" class="btn btn-outline-info follow-btn" data-toggle="tooltip" title="Unfollow Game" onclick="setUnfollowGame('@name')">
                                                                <i fill="CurrentColor" id="@game.AppId followicon" class="bi bi-bookmark-dash-fill"></i>
                                                            </button>
                                                            <div class="card-body">
                                                                <h4 class="card-title">@game.Name</h4>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="card followCard col-md-4 mb-3" id="@game.Name" value="@game.AppId">
                                                            <img class="img-fluid" alt="@game.Name" src="@string.Format("https://steamcdn-a.akamaihd.net/steam/apps/{0}/capsule_616x353.jpg", game.AppId)" alt="@string.Format("{0}", game.Name)">
                                                            <button type="button" class="btn btn-outline-info follow-btn" data-toggle="tooltip" title="Unfollow Game" onclick="setUnfollowGame('@game.Name')">
                                                                <i fill="CurrentColor" id="@game.AppId followicon" class="bi bi-bookmark-dash-fill"></i>
                                                            </button>
                                                            <div class="card-body">
                                                                <h4 class="card-title">@game.Name</h4>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            }
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br/>

        <h1>Your News</h1>
        <h6>Click the <i fill="CurrentColor" class="bi bi-info-circle-fill"></i> to see the news section for a game.</h6>
        <br/>
        <div class="container">

            <h4>Recently Played Games</h4>

            <div class="row">
                @if (Model.RecentGames.Count > 0)
                {
                    <div id="recentGamesCarousel" class="carousel slide" data-bs-touch="false" data-bs-interval="false">
                        <div class="carousel-inner">
                            <div class="carousel-item active align-items-stretch">
                                <div class="row row-cols-1 row-cols-md-3 g-1 justify-content-center ">

                                    @for (var i = 0; i < Model.RecentGames[0].Count; i++)
                                    {
                                        <div class="col-md-4 threecol w-100">
                                            <div class="card h-100 userCard">
                                                <img class="card-img-top" alt="@Model.RecentGames[0][i].Name" src="@string.Format("https://steamcdn-a.akamaihd.net/steam/apps/{0}/capsule_616x353.jpg", Model.RecentGames[0][i].AppId)" alt="@string.Format("{0}", Model.RecentGames[0][i].Name)">
                                                <a class="btn btn-outline-info show-btn" title="More Game News" href='@Url.Action("ShowMoreNews", "Home", new { appId = Model.RecentGames[0][i].AppId })'>
                                                    <i fill="CurrentColor" class="bi bi-info-circle-fill"></i>
                                                </a>
                                                <div class="card-body h-100">
                                                    <h4 class="card-title">@Model.RecentGames[0][i].Name</h4>
                                                    <p>@Model.GamesNewsItems[0][recentCount]</p>

                                                    @{
                                                        recentCount++;
                                                    }

                                                </div>
                                            </div>
                                        </div>

                                    }
                                </div>

                            </div>

                            @for (var index = 1; index < Model.RecentGames.Count; index++)
                            {
                                var game = Model.RecentGames[index];
                                <div class="carousel-item align-items-stretch">
                                    <div class="row row-cols-1 row-cols-md-3 g-1 justify-content-center">

                                        @for (var i = 0; i < Model.RecentGames[index].Count; i++)
                                        {
                                            <div class="col-md-4 threecol w-100">
                                                <div class="card h-100 userCard">
                                                    <img class="card-img-top" alt="@game[i].Name" src="@string.Format("https://steamcdn-a.akamaihd.net/steam/apps/{0}/capsule_616x353.jpg", game[i].AppId)" alt="@string.Format("{0}", @game[i].Name)">
                                                    <a class="btn btn-outline-info show-btn" title="More Game News" href='@Url.Action("ShowMoreNews", "Home", new { appId = game[i].AppId })'>
                                                        <i fill="CurrentColor" class="bi bi-info-circle-fill"></i>
                                                    </a>
                                                    <div class="card-body h-100">
                                                        <h4 class="card-title">@game[i].Name</h4>
                                                        <p>@Model.GamesNewsItems[0][recentCount]</p>

                                                        @{
                                                            recentCount++;
                                                        }

                                                    </div>
                                                </div>
                                            </div>

                                        }
                                    </div>
                                </div>

                            }
                        </div>

                        <button class="carousel-control-prev" type="button" data-bs-target="#recentGamesCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>

                        <button class="carousel-control-next" type="button" data-bs-target="#recentGamesCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>

                    </div>
                }
                else
                {
                    <h4>You have no Recent Games to Display, Please visit the <a class="btn btn-outline-info justify-content-center" href='@Url.Action("Index", "Library")'>Library Page</a> or go play some games</h4>
                }
            </div>
            <br />

            <br />
            <div class="container">

                <h4>Followed Games</h4>

                <div class="row">
                    @if (Model.FollowedGames.Count > 0)
                    {
                        <div id="followedGamesCarousel" class="carousel slide" data-bs-touch="false" data-bs-interval="false">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <div class="row row-cols-1 row-cols-md-3 g-1 justify-content-center">

                                        @for (var i = 0; i < Model.FollowedGames[0].Count; i++)
                                        {
                                            <div class="col-md-4 threecol w-100">
                                                <div class="card h-100 userCard">
                                                    <img class="card-img-top" alt="@Model.FollowedGames[0][i].Name" src="@string.Format("https://steamcdn-a.akamaihd.net/steam/apps/{0}/capsule_616x353.jpg", Model.FollowedGames[0][i].AppId)" alt="@string.Format("{0}", Model.FollowedGames[0][i].Name)">
                                                    <a class="btn btn-outline-info show-btn" title="More Game News" href='@Url.Action("ShowMoreNews", "Home", new { appId = Model.FollowedGames[0][i].AppId })'>
                                                        <i fill="CurrentColor" class="bi bi-info-circle-fill"></i>
                                                    </a>
                                                    <div class="card-body h-100">
                                                        <h4 class="card-title">@Model.FollowedGames[0][i].Name</h4>
                                                        <p>@Model.GamesNewsItems[1][followedCount]</p>
                                                        @{
                                                            followedCount++;
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>

                                @for (var index = 1; index < Model.FollowedGames.Count; index++)
                                {
                                    var game = Model.FollowedGames[index];
                                    <div class="carousel-item">
                                        <div class="row row-cols-1 row-cols-md-3 g-1 justify-content-center">

                                            @for (var i = 0; i < Model.FollowedGames[index].Count; i++)
                                            {
                                                <div class="col-md-4 threecol w-100">
                                                    <div class="card h-100 userCard">
                                                        <img class="card-img-top" alt="@game[i].Name" src="@string.Format("https://steamcdn-a.akamaihd.net/steam/apps/{0}/capsule_616x353.jpg", game[i].AppId)" alt="@string.Format("{0}", @game[i].Name)">
                                                        <a class="btn btn-outline-info show-btn" title="More Game News" href='@Url.Action("ShowMoreNews", "Home", new { appId = game[i].AppId })'>
                                                            <i fill="CurrentColor" class="bi bi-info-circle-fill"></i>
                                                        </a>
                                                        <div class="card-body h-100">
                                                            <h4 class="card-title">@game[i].Name</h4>
                                                            <p>@Model.GamesNewsItems[1][followedCount]</p>
                                                            @{
                                                                followedCount++;
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>

                            <button class="carousel-control-prev" type="button" data-bs-target="#followedGamesCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>

                            <button class="carousel-control-next" type="button" data-bs-target="#followedGamesCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>

                        </div>
                    }
                    else
                    {
                        <h6 class="justify-content-center">You have no followed games to Display, Please visit the <a class="btn btn-outline-info justify-content-center" href='@Url.Action("Index", "Library")'>Library Page</a> and go follow some games</h6>
                    }
                </div>
                <br />

            </div>
        </div>
    </div>


    <div class="container-fluid" style="height: 25%;">

        <h1>Your Race Results</h1>
        <div class="row">
            <div class="col-md-4">
            </div>
        </div>
    </div>
}
@section Scripts
{
    <script type="text/javascript" src="~/js/followGame.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

}
