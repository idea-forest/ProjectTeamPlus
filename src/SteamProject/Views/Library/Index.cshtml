@model SteamProject.ViewModels.UserLibraryVM
@{
    ViewData["Title"] = "Game Library";
}

<head>
    <link rel="stylesheet" href="~/css/Library.css">
</head>
<br><br>
@if (Model == null)
{
    
    <h1>This will be your library page once you sign in with a  <a href="/Identity/Account/Manage/ExternalLogins" class="btn btn-outline-info justify-content-center">linked account</a> and we will pull your Steam library.</h1>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-3">
                <div>
                    <br>
                    <img class="user-avatar" id="@Model._user.SteamId" src="@Model._user.AvatarUrl" style="padding-bottom: 10px; padding-top: 10px"/>
                </div>
            </div>
            <div class="col-lg-8">
                <div class="row">
                    <h1>@Model._user.SteamName's Steam Library</h1>
                </div>
                <div class="row">
                    <div class="col-lg">
                        <button class="btn btn-secondary profile-btn"><a href="@Model._user.ProfileUrl" style="color:white; text-decoration:none; ">@Model._user.SteamName's Steam Profile</a></button>
                        <br><br>
                        <button class="btn btn-secondary show-hidden-btn" data-toggle="tooltip" title="Show Hidden Games" onclick="showHiddenGamesModal()" style="margin-bottom:5px">
                            <i fill="CurrentColor" class="bi bi-eye"></i> Show hidden games
                        </button><br><br>
                        <a class="btn btn-secondary refresh-btn" title="Refresh Library" style="margin-bottom:5px" href='@Url.Action("Index", "Library", new {refresh = true})'>
                            <i fill="CurrentColor" class="bi bi-arrow-clockwise"></i> Refresh library<br>
                        </a>
                    </div>
                    <div class="col">
                        <br>
                        <p>Hover over a game to see options such as:</p>
                        <ul>
                            <li>View achievements</li>
                            <li>Hide game <i fill="CurrentColor" class="bi bi-eye-slash-fill"></i></li>
                            <li>View more info <i fill="CurrentColor" class="bi bi-info-circle-fill"></i></li>
                            <li>Follow/Unfollow <i fill="CurrentColor" class="bi bi-bookmark-plus"></i> <i fill="CurrentColor" class="bi bi-bookmark-dash-fill"></i></li>
                        </ul>
                    </div>
                </div>
            </div>
            
        </div>
    </div>
    <input id="search-input" type="search" placeholder= "🔍 search for a game..."> 
    <div class="flex-container">
        @{
            foreach(var game in Model._user.UserGameInfos)
            {
                var tempGame = Model._games.Where(g => g.AppId == game.Game.AppId).First();
                if(game.Hidden == false)
                {
                    <div class="flex-item gameContainer" id="@tempGame.Name" value="@game.Game.AppId" data-toggle="tooltip" title="@game.Game.Name" name=@game.Game.Id style="padding: 2px; position: relative">
                        <button class="achievement-btn" data-toggle="tooltip" title="View Achievements" id="@game.Game.AppId"></button>
                        <img src="@string.Format("https://steamcdn-a.akamaihd.net/steam/apps/{0}/header.jpg", @game.Game.AppId)" style="height:200px"/><br>
                        @{
                            //This is used to remove punctuation so that strings still work. Games like 'America's Army', breaks interacitons thanks to it's apostrophe.
                            var index = tempGame.Name.IndexOf("'");
                            if(index > -1)
                            {
                                var name = tempGame.Name.Substring(0, index) + "\\" + tempGame.Name.Substring(index);
                                <button type="button" class="btn btn-outline-warning hide-btn" data-toggle="tooltip" title="Hide Game" onclick="setHiddenGame('@name', '@Model._user.Id')" name=@game.Game.AppId>
                                    <i fill="CurrentColor" class="bi bi-eye-slash-fill"></i>
                                </button>
                                <button type="button" class="btn btn-outline-info follow-btn" data-toggle="tooltip" title="Follow Game" onclick="setFollowedGame('@name')" name=@game.Game.AppId>
                                    @if(game.Followed == true)
                                    {
                                        <i fill="CurrentColor" id="@game.Game.AppId followicon" class="bi bi-bookmark-dash-fill"></i>
                                    }
                                    else
                                    {
                                        <i fill="CurrentColor" id="@game.Game.AppId followicon" class="bi bi-bookmark-plus"></i>
                                    }
                                </button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-outline-warning hide-btn" data-toggle="tooltip" title="Hide Game" onclick="setHiddenGame('@tempGame.Name', '@Model._user.Id')" name=@game.Game.Id>
                                    <i  fill="CurrentColor" class="bi bi-eye-slash-fill"></i>
                                </button>
                                <button type="button" class="btn btn-outline-info follow-btn" data-toggle="tooltip" title="Follow/Unfollow Game" onclick="setFollowedGame('@tempGame.Name')" name=@game.Game.Id>
                                    @if(game.Followed == true)
                                    {
                                        <i fill="CurrentColor" id="@game.Game.AppId followicon" class="bi bi-bookmark-dash-fill"></i>
                                    }
                                    else
                                    {
                                        <i fill="CurrentColor" id="@game.Game.AppId followicon" class="bi bi-bookmark-plus"></i>
                                    }
                                </button>
                            }
                            <a class="btn btn-outline-info show-btn"  title="More Game Info" href='@Url.Action("ShowMoreInfo", "Library", new {appId = @game.Game.AppId})'>
                                <i fill="CurrentColor" class="bi bi-info-circle-fill"></i>
                            </a>
                        }
                    </div>
                }
            }
        }
        <div id="hidden-game-modal" class="modal fade">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4>Hidden Games</h4>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="flex-container">
                            @{
                                var temp = Model._user.UserGameInfos.Where(g => g.Hidden == true).ToList();
                                if(temp.Count() > 0)
                                {
                                    foreach(var game in Model._user.UserGameInfos)
                                    {
                                        if(game.Hidden)
                                        {
                                            var tempGame = Model._games.Where(g => g.AppId == game.Game.AppId).First();
                                            <div class="flex-item gameContainer" id="@tempGame.Name" value="@game.Game.Id" style="padding: 2px; position: relative">
                                                <img src="@string.Format("https://steamcdn-a.akamaihd.net/steam/apps/{0}/header.jpg", @game.Game.AppId)" style="height:100px"/><br>
                                                @{
                                                    var index = tempGame.Name.IndexOf("'");
                                                    if(index > -1)
                                                    {
                                                        var name = tempGame.Name.Substring(0, index) + "\\" + tempGame.Name.Substring(index);
                                                        <button type="button" class="btn btn-outline-warning unhide-btn" data-toggle="tooltip" title="Unhide Game" onclick="setUnhideGame('@name', '@Model._user.Id')" name=@game.Game.Id>
                                                            <i fill="CurrentColor" class="bi bi-eye-fill"></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-outline-warning unhide-btn" data-toggle="tooltip" title="Unhide Game" onclick="setUnhideGame('@tempGame.Name', '@Model._user.Id')" name=@game.Game.Id>
                                                            <i fill="CurrentColor" class="bi bi-eye-fill"></i>
                                                        </button>
                                                    }
                                                }
                                            </div>
                                        }
                                    } 
                                }
                                else
                                {
                                    <div style="color: white">You have no hidden games, go hide some! If you just hid a game, try refreshing the page.</div>
                                }
                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick="refreshLibrary()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ach-modal" tabindex="-1" role="dialog" aria-labelledby="ach-modal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content ach-modal-content">
                <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="20" height="20"><g><rect height="15.4956" opacity="0" width="15.4859" x="0" y="0"/><path d="M0.252699 15.2429C0.594496 15.575 1.1609 15.575 1.49293 15.2429L7.74293 8.99293L13.9929 15.2429C14.325 15.575 14.9011 15.5847 15.2332 15.2429C15.5652 14.9011 15.5652 14.3445 15.2332 14.0125L8.98317 7.7527L15.2332 1.5027C15.5652 1.17067 15.575 0.604261 15.2332 0.27223C14.8914-0.0695668 14.325-0.0695668 13.9929 0.27223L7.74293 6.52223L1.49293 0.27223C1.1609-0.0695668 0.58473-0.0793324 0.252699 0.27223C-0.0793324 0.614027-0.0793324 1.17067 0.252699 1.5027L6.5027 7.7527L0.252699 14.0125C-0.0793324 14.3445-0.0890981 14.9109 0.252699 15.2429Z" fill="#000000" fill-opacity="0.25"/></g></svg>
                </button>
                <br>
            </div>
            <div class="modal-body" style="height: 30rem">
                <div class="loading-spinner"></div>
                <div class="container" id="modal-container">
                    <div class="row">
                        <div class="col-md-4" id="modal-left">
                            <h5 class="earned-label">Achievements Earned:</h5>
                            <h4 class="ach-earned"></h4>
                            <div class="progress">
                                <div class="progress-value"></div>
                            </div>
                            <img class="modal-img">
                        </div>
                        <div class="col-md-8" id="modal-right">
                            <div id="ach-row" class="row"></div>
                        </div>
                        </div>
                    </div>
                    <div class="error">
                        <h2 class="error-ach">There are no achievements for this title.</h2>
                        <h2 class="error-ser">An error occurred while requesting info from Steam.</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts
{
    <script type="text/javascript" src="~/js/libraryPage.js"></script>
    <script type="text/javascript" src="~/js/followGame.js"></script>
    <script type="text/javascript"  src="@(Url.Content("~/js/search.js"))"></script>
    <script type="text/javascript"  src="@(Url.Content("~/js/achievements.js"))"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
}
